---
  - name: APFW - Search files 
    vars:
      search_term: 'search' #default . overridden in playbook and job template in ansible/awx
    gather_facts: false
    hosts: localhost
    connection: local 
    tasks:
      - name: search to find files  
        find:
          paths: /tmp/
          patterns: "{{ search_term }}"
        register: find_files
        
  
  
  - name: copy files  
    vars:
      tower_jobcredential: "{{ credential}}"
      management_server: "{{'management_server'}}"
      awx_host: "{{ awx host }}"
      destination_logpath: "{{destination_logpath}}" 
    gather_facts: false
    hosts: "{{ management_server }}"
    tasks: 
      
      - name: import tower_vault_creds
        include_vars: vars/tower_vault_creds.yml
      
      #old common vars 
      #- name:  import common vars 
      #  include_vars: "vars/common_transfer_host_vars_{{archive_settings}}.yml"

      - name: confirm destination log path exists
        win_file:
            path: "{{destination_logpath}}" # required. Path to the file being managed.
            state: directory # not required. choices: absent;directory;file;touch. If C(directory), all immediate subdirectories will be created if they do not exist.,If C(file), the file will NOT be created if it does not exist, see the M(copy) or M(template) module if you want that behavior.  If C(absent), directories will be recursively deleted, and files will be removed.,If C(touch), an empty file will be created if the C(path) does not exist, while an existing file or directory will receive updated file access and modification times (similar to the way C(touch) works from the command line).
      
      - name: copy files to host
        win_copy:
          src: "{{ item.path }}"
          dest: "{{destination_logpath}}"
        with_items:  "{{ hostvars['localhost']['find_files']['files'] }}"


  - name: APFW - Search files 
    vars:
      search_term: 'search' #default . overridden in playbook and job template in ansible/awx
    gather_facts: false
    hosts: localhost
    connection: local
    tasks:
      - name: search to find files  
        find:
          paths: /tmp/
          patterns: "{{ search_term }}"
        register: find_files

      - name: remove files
        file:
         path: "{{ item.path }}"
         state: absent
        with_items: "{{ find_files.files }}"


